{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","itemsReducer","createReducer","_","payload","state","filter","id","loadingReducer","filterReducer","combineReducers","items","loading","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","axios","defaults","baseURL","dispatch","get","then","data","catch","error","name","number","contact","post","contactId","delete","getFilter","getContacts","getLoading","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","handleChangeForm","event","target","value","useDispatch","handleUniqueContact","allContasts","newName","find","onSubmit","preventDefault","contactsOperations","alert","className","s","form","label","type","onChange","pattern","title","required","input","btn","ContactListItem","onRemove","listItem","onClick","ContactList","useEffect","length","list","map","Filter","LoaderSpinner","container","color","height","width","timeout","App","isLoading","Loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41281e1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__162Mf\",\"number\":\"ContactList_number__3_HB3\",\"btn\":\"ContactList_btn__2ZiS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2N72D\",\"input\":\"Filter_input__1rI3H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__2LBgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3vTtm\",\"label\":\"ContactForm_label__2G00s\",\"input\":\"ContactForm_input__MD5Qd\",\"btn\":\"ContactForm_btn__FFlIk\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const removeContactRequest = createAction(\r\n  \"contacts/removeContactRequest\"\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  \"contacts/removeContactSuccess\"\r\n);\r\nexport const removeContactError = createAction(\"contacts/removeContactError\");\r\n\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n\r\n// export const addContact = ({ id, name, number }) => ({\r\n//   type: actionsTypes.ADD,\r\n//   payload: { id, name, number },\r\n// });\r\n\r\n// export const removeContact = (contactId) => ({\r\n//   type: actionsTypes.REMOVE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const changeFilter = (value) => ({\r\n//   type: actionsTypes.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter,\r\n} from \"./contacts-actions\";\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: \"\",\r\n//     loading: false,\r\n//     error: null,\r\n//   },\r\n// };\r\n// const initialContacts = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const errorReducer = createReducer(null, {\r\n//   [fetchContactsError]: (_, { payload }) => payload,\r\n//   [addContactError]: (_, { payload }) => payload,\r\n//   [removeContactError]: (_, { payload }) => payload,\r\n//   [fetchContactsRequest]: () => null,\r\n//   [addContactRequest]: () => null,\r\n//   [removeContactRequest]: () => null,\r\n// });\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n  // error: errorReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\n// const persistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst middleware = (getDefaultMiddleware) =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }).concat(logger);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contacts-actions\";\r\n\r\nconst BASE_URL = \"http://localhost:4040\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => {\r\n      dispatch(fetchContactsSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch((error) => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst removeContact = (contactId) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(removeContactSuccess(contactId)))\r\n    .catch((error) => dispatch(removeContactError(error)));\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { fetchContacts, addContact, removeContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getLoading = (state) => state.contacts.loading;\r\n\r\n// export const getError = (state) => state.contacts.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return allContacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport s from \"./ContactForm.module.css\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n\n  const handleChangeForm = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const dispatch = useDispatch();\n  const onSubmit = ({ name, number }) =>\n    dispatch(contactsOperations.addContact({ name, number }));\n\n  const handleSubmitForm = (event) => {\n    event.preventDefault();\n    const uniqueContact = handleUniqueContact(contacts, name);\n    if (!uniqueContact) {\n      alert(`${name} is already in contacts. Enter another name.`);\n      return;\n    }\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const handleUniqueContact = (allContasts, newName) => {\n    const isExistContact = !!allContasts.find(\n      (contact) => contact.name === newName\n    );\n    return !isExistContact;\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeForm}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeForm}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр, может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={s.input}\n        />\n      </label>\n      <button className={s.btn}>Add contact</button>\n    </form>\n  );\n}\n// const mapStateToProps = (state) => {\n//   return {\n//     contacts: state.contacts.items,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onSubmit: ({ id, name, number }) =>\n//       dispatch(addContact({ id, name, number })),\n//   };\n// };\n\n//  connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport {\n  getVisibleContacts,\n  getFilter,\n} from \"../../redux/contacts/contacts-selectors\";\n\nimport s from \"./ContactList.module.css\";\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.name}>{name}: </span>\n      <span className={s.number}>{number}</span>\n      <button onClick={() => onRemove(id)} className={s.btn}>\n        Deleted\n      </button>\n    </li>\n  );\n};\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const onRemove = (id) => dispatch(contactsOperations.removeContact(id));\n\n  if (contacts.length === 0) return <p>No contacts by name - {filter}.</p>;\n\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => (\n        <ContactListItem key={contact.id} {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  );\n}\n","import Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport s from \"./Loader.module.css\";\n\nconst LoaderSpinner = () => {\n  return (\n    <div className={s.container}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={50}\n        width={50}\n        timeout={3000}\n      />\n    </div>\n  );\n};\n\nexport default LoaderSpinner;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport LoaderSpinner from \"./components/Loader\";\nimport { getLoading } from \"./redux/contacts/contacts-selectors\";\n\nexport default function App() {\n  const isLoading = useSelector(getLoading);\n  return (\n    <div className=\"contaiter\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && <LoaderSpinner />}\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}